{"version":3,"sources":["../../lib/YTApiService.ts"],"names":[],"mappings":"AAAA,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AACzC,OAAO,EAAA,WAAE,EAAwB,MAAM,sBAAA,CAAuB;AAC9D,OAAO,EAAA,mBAAE,EAAmB,MAAM,wBAAA,CAAyB;AAC3D,EAAE;AAGF;IAME,sBAAY,MAAmB;QAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC,CAAC;IAElD,CAAC;IAEM,oBAAO,GAAd,UAAe,MAAmB;QAChC,MAAM,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAEM,2BAAI,GAAX,UAAY,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAEM,6BAAM,GAAb,UAAc,CAAQ,EAAE,KAAY,EAAE,IAAW,EAAE,IAAuB;QAAvB,qBAAA,EAAA,gBAAuB;QACxE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EACxC,oBAAoB,EACpB;YACE,YAAY,EAAE,KAAK;YACnB,MAAM,EAAE,IAAI;YACZ,GAAG,EAAE,CAAC;YACN,MAAM,EAAE,IAAI;SACb,CAAC,CAAC;IACP,CAAC;IAEM,qCAAc,GAArB,UAAsB,EAAS,EAAE,IAAuB;QAAvB,qBAAA,EAAA,gBAAuB;QACtD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EACxC,sBAAsB,EACtB,EAAC,IAAI,EAAE,EAAE;YACP,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;IACrB,CAAC;IAEM,oCAAa,GAApB,UAAqB,EAAS,EAAE,IAAuB;QAAvB,qBAAA,EAAA,gBAAuB;QACrD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EACxC,oBAAoB,EACpB,EAAC,IAAI,EAAE,EAAE;YACP,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;IACrB,CAAC;IACM,qCAAc,GAArB,UAAsB,UAAiB,EAAC,eAA2B,EAAE,IAAuB;QAApD,gCAAA,EAAA,oBAA2B;QAAE,qBAAA,EAAA,gBAAuB;QAC1F,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EACxC,sBAAsB,EACtB,EAAC,OAAO,EAAE,aAAa;YACrB,YAAY,EAAE,UAAU;YACxB,MAAM,EAAE,IAAI;YACZ,iBAAiB,EAAE,eAAe,EAAC,CAAC,CAAC;IAC3C,CAAC;IAEM,mCAAY,GAAnB,UAAoB,IAAuB;QAAvB,qBAAA,EAAA,gBAAuB;QACzC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,EACxC,sBAAsB,EACtB,EAAC,UAAU,EAAE,MAAM;YACjB,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;IACrB,CAAC;IAQH,mBAAC;AAAD,CAlEA,AAkEC;;AAPM,uBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,2BAAc,GAAmE,cAAM,OAAA;IAC9F,IAAI;CACH,EAF6F,CAE7F,CAAC","file":"YTApiService.js","sourceRoot":"","sourcesContent":["import {Injectable} from '@angular/core';\nimport {YTApiConfig, initConfigs} from \"./config/YTApiConfig\";\nimport {YTApiProvideService} from \"./YTApiProviderService\";\n//\n\n\nexport class YTApiService {\n\n  private config: YTApiConfig;\n  public provider:YTApiProvideService;\n\n\n  constructor(config: initConfigs) {\n    this.config = new YTApiConfig(config);\n    this.provider = new YTApiProvideService(config);\n\n  }\n\n  static factory(config: initConfigs) {\n    return new YTApiService(config);\n  }\n\n  public auth(ev){\n    return this.provider.handleAuthClick(ev);\n  }\n\n  public search(q:string, limit:number, type:string, part:string = 'snippet'){\n    return this.provider.buildApiRequest('GET',\n      '/youtube/v3/search',\n      {\n        'maxResults': limit,\n        'part': part,\n        'q': q,\n        'type': type\n      });\n  }\n\n  public getChannelByID(ID:string, part:string = 'snippet'){\n    return this.provider.buildApiRequest('GET',\n      '/youtube/v3/channels',\n      {'id': ID,\n        'part': part});\n  }\n\n  public getVideosByID(ID:string, part:string = 'snippet'){\n    return this.provider.buildApiRequest('GET',\n      '/youtube/v3/videos',\n      {'id': ID,\n        'part': part});\n  }\n  public getMostPopular(regionCode:string,videoCategoryId:string = '', part:string = 'snippet'){\n    return this.provider.buildApiRequest('GET',\n      '/youtube/v3/channels',\n      {'chart': 'mostPopular',\n        'regionCode': regionCode,\n        'part': part,\n        'videoCategoryId': videoCategoryId});\n  }\n\n  public getAuthLiked(part:string = 'snippet'){\n    return this.provider.buildApiRequest('GET',\n      '/youtube/v3/channels',\n      {'myRating': 'like',\n        'part': part});\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\nnull,\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}